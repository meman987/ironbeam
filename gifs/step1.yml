# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /media/me/364b201e-3416-4537-bb16-98314b1ef284/git/ironbeam_github
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 169
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 48
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
records:
  - delay: 243
    content: "\e[?2004h\e[01;32mme@a90f411d\e[00m:\e[01;34m/media/me/364b201e-3416-4537-bb16-98314b1ef284/git/ironbeam_github\e[00m$ "
  - delay: 2044
    content: c
  - delay: 202
    content: a
  - delay: 283
    content: t
  - delay: 239
    content: ' '
  - delay: 324
    content: R
  - delay: 49
    content: E
  - delay: 176
    content: A
  - delay: 174
    content: D
  - delay: 268
    content: 'ME.md '
  - delay: 443
    content: "\r\n\e[?2004l\r# Pre-requisites\r\n\r\n[`python`](https://www.python.org/downloads/), [`hledger`](https://github.com/simonmichael/hledger) and [`just`](https://github.com/casey/just) are used. \r\nOnly `python` is needed to create csv-files. The `justfile` is developed for linux/macOS. It should work with cygwin or similar under\r\nWindows.\r\n\r\n\r\n# Usage\r\n\r\nSave daily account statements from https://trading.certigo.com/ (Acount > Overview > Statements) \r\nin the `input` folder with the extension `.txt`. Select all text, copy and paste into a text-file.\r\n\r\n<img width=\"798\" alt=\"screen\" src=\"https://github.com/user-attachments/assets/1b9293fd-ee84-4164-ad64-8fb57646de69\">\r\n\r\nRun `just iron` to show results or run the commands in `justfile` manually if you cannot use \r\n`just`.\r\n\r\n## Run manually (without `just`)\r\n\r\n1. Create an `.out`-file for each type of record: `python3 iron1.py input` (Assuming the text files are in the folder `input`)\r\n2. Create `PURCHASE_AND_SALE.csv`: `python3 iron2.py input/PURCHASE_AND_SALE.out pur`\r\n3. Create `CONFIRMATION.csv`: `python3 iron2.py input/CONFIRMATION.out conf`\r\n\e[?2004h\e[01;32mme@a90f411d\e[00m:\e[01;34m/media/me/364b201e-3416-4537-bb16-98314b1ef284/git/ironbeam_github\e[00m$ "
  - delay: 7644
    content: "\e[3mpython3 iron1.py input\e[23m"
  - delay: 668
    content: "\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bpython3 iron1.py input"
  - delay: 546
    content: "\r\n\e[?2004l\r"
  - delay: 24
    content: "Namespace(folder='input')\r\n[('SEGREGATED_STATUS_TOTALS', 173), ('OPEN_POSITION_SUMMARY', 38), ('OPEN_POSITION_DETAIL', 40), ('CONFIRMATION', 96), ('PURCHASE_AND_SALE', 44)]\r\n\e[?2004h\e[01;32mme@a90f411d\e[00m:\e[01;34m/media/me/364b201e-3416-4537-bb16-98314b1ef284/git/ironbeam_github\e[00m$ "
  - delay: 2850
    content: l
  - delay: 60
    content: s
  - delay: 127
    content: ' '
  - delay: 488
    content: i
  - delay: 161
    content: 'n'
  - delay: 220
    content: p
  - delay: 60
    content: u
  - delay: 173
    content: t
  - delay: 266
    content: "\r\n\e[?2004l\r240614.txt  240618.txt  240620.txt  240624.txt  CONFIRMATION.out          OPEN_POSITION_SUMMARY.out  SEGREGATED_STATUS_TOTALS.out\r\n240617.txt  240619.txt  240621.txt  240625.txt  OPEN_POSITION_DETAIL.out  PURCHASE_AND_SALE.out\r\n\e[?2004h\e[01;32mme@a90f411d\e[00m:\e[01;34m/media/me/364b201e-3416-4537-bb16-98314b1ef284/git/ironbeam_github\e[00m$ "
  - delay: 1684
    content: "\e[?2004l\r\r\nlogout\r\n"
